stages:
  - build
  - test
  - quality
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2

services:
  - docker:dind

before_script:
  - docker info
  - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin registry.gitlab.com

build_frontend:
  stage: build
  image: docker:latest
  script:
    - cd frontend
    - docker build -t registry.gitlab.com/your-username/your-project/frontend:$CI_COMMIT_SHORT_SHA .
    - docker push registry.gitlab.com/your-username/your-project/frontend:$CI_COMMIT_SHORT_SHA

build_backend:
  stage: build
  image: docker:latest
  script:
    - cd backend
    - docker build -t registry.gitlab.com/your-username/your-project/backend:$CI_COMMIT_SHORT_SHA .
    - docker push registry.gitlab.com/your-username/your-project/backend:$CI_COMMIT_SHORT_SHA

test_frontend:
  stage: test
  image: node:14
  script:
    - cd frontend
    - yarn install
    - yarn test

test_backend:
  stage: test
  image: node:14
  script:
    - cd backend
    - yarn install
    - yarn test

quality_frontend:
  stage: quality
  image: sonarsource/sonar-scanner-cli
  script:
    - cd frontend
    - sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT_KEY_FRONTEND -Dsonar.organization=$SONAR_ORGANIZATION_FRONTEND -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN_FRONTEND
  only:
    - merge_requests
    - main

quality_backend:
  stage: quality
  image: sonarsource/sonar-scanner-cli
  script:
    - cd backend
    - sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT_KEY_BACKEND -Dsonar.organization=$SONAR_ORGANIZATION_BACKEND -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN_BACKEND
  only:
    - merge_requests
    - main

deploy:
  stage: deploy
  image: google/cloud-sdk:latest
  script:
    - kubectl apply -f k8s/deployment.yaml
    - kubectl apply -f k8s/service.yaml
  environment:
    name: production
    url: http://your-app-url
  only:
    - main
